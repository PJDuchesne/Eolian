; Author: Paul Duchesne (B00332119)
; Date: JUNE 27, 2017
; Name: Priority Input Devices
; Purpose: Tests interrupts with priority mode active. With 7 devices
;         it will be obvious when which one is called and executed.
;         The test outputs the results of the interrupts in the order
;         that the interrupt is services to a data array starting at
;         memory location 4000

; Labels for Devices 0-7 SR and Buffer
dev0reg  EQU $0000   ; Control register for device 0
dev0data EQU $0001   ; Data buffer for device 0
dev1reg  EQU $0002
dev1data EQU $0003
dev2reg  EQU $0004
dev2data EQU $0005
dev3reg  EQU $0006
dev3data EQU $0007
dev4reg  EQU $0008
dev4data EQU $0009
dev5reg  EQU $000a
dev5data EQU $000b
dev6reg  EQU $000c
dev6data EQU $000d
dev7reg  EQU $000e
dev7data EQU $000f

ORG $4000 
DeviceDataArray        ; Results data array start

; MAIN
ORG $1000
START 

; Enable interrupts on all devices
BIS #1,dev0reg;
BIS #1,dev1reg;
BIS #1,dev2reg;
BIS #1,dev3reg;
BIS #1,dev4reg;
BIS #1,dev5reg;
BIS #1,dev6reg;
BIS #1,dev7reg;

mov #DeviceDataArray,R15

mov #$FFC0,SP                   ; Set up stack pointer
BIS  #8,SR                      ; Set GIE

forever jmp forever             ; Forever loop, waiting for interrupts

; DEVICE INTERRUPTS HERE
org $3000
ISRdev0
mov dev0data,dev0reg(R15)       ; Acknowlege interrupt
add #2,R15
RETI

org $3100
ISRdev1
mov dev1data,dev0reg(R15)       ; Acknowlege interrupt
add #2,R15
RETI

org $3200
ISRdev2
mov dev2data,dev0reg(R15)       ; Acknowlege interrupt
add #2,R15
RETI

org $3300
ISRdev3
mov dev3data,dev0reg(R15)       ; Acknowlege interrupt
add #2,R15
RETI

org $3400
ISRdev4
mov dev4data,dev0reg(R15)       ; Acknowlege interrupt
add #2,R15
RETI

org $3500
ISRdev5
mov dev5data,dev0reg(R15)       ; Acknowlege interrupt
add #2,R15
RETI

org $3600
ISRdev6
mov dev6data,dev0reg(R15)       ; Acknowlege interrupt
add #2,R15
RETI

org $3700
ISRdev7
mov dev7data,dev0reg(R15)       ; Acknowlege interrupt
add #2,R15
RETI

; insert ISR Vector address
org $FFC0       ; Base address for interrupt vector
WORD ISRdev0    ; Address of ISR_0 
WORD ISRdev1
WORD ISRdev2
WORD ISRdev3
WORD ISRdev4
WORD ISRdev5
WORD ISRdev6
WORD ISRdev7

END START       ; For start address.

; Example DEVICES.TXT File: (Between the '//' flags)
//
1		0
1		0
1		0
1		0
1		0
1		0
1		0
1		0

INTERRUPTS

25		0		Z
100		0		A
100		1		B
100		2		C
100		3		D
100		4		E
100		5		F
100		6		G
100		7		H
125		0		Y
135		3		Y
145		2		Y
185		7		Y
195		1		Y
195		1		Y
215		5		Y

END
//

; TEST OUTPUT: From mem.txt file
;       This is the data array output int he order of the interrupt
;       Notice that not all data made it, some overflow occurred

4000    5a
4001    00
4002    41
4003    00
4004    42
4005    00
4006    59
4007    00
4008    59
4009    00
400a    59
400b    00
400c    45
400d    00
400e    59
400f    00
4010    46
4011    00
4012    59
4013    00
4014    47
4015    00
4016    59
4017    00

