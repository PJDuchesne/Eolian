; Author: Paul Duchesne (B00332119)
; Date: JUNE 27, 2017
; Name: Two Operand Arithmatic Commands
; Purpose: Tests all two operand arithmatic operations

ORG $1000

MAIN    

MOV     #$FF12,R4       ; R4 = 0xFF12
MOV     #$0023,R5       ; Temp
ADD     R4,R5           ; R5 = 0xFF35
MOV     #$0111,R6
ADD     R4,R6           ; R6 = 0x0023 (CARRY BIT SET)
MOV     #$003D,R7
ADDC    R4,R7           ; R7 = 0xFF50
MOV     #$003D,R8
ADD     R4,R8           ; R8 = 0xFF4f

MOV     #$1234,R15

MOV     #$1234,R9
SUB     R15,R9          ; R9 = 0x0000
MOV     #$1000,R10      
SUB     R15,R10         ; R10 = 0xFDCC (CARRY BIT SET)
MOV     #$1500,R11
SUBC    R15,R11         ; R11 = 0x02CD
MOV     #$1500,R12
SUBC    R15,R12         ; R12 = 0x02CC (Same subtraction without carry bit set)
MOV     #$5812,R13
MOV     #$1344,R14
MOV     #$1344,R15
DADC.b  R13,R14         ; R14 = 0x1356
DADC.W  R13,R15         ; R15 = 0x7156

; CMP is tested in the SR test

END MAIN

; TEST OUTPUT: (Blank Registers are irrelevant to the test)
;  --> CPU Registers (Final values)
;       R0:
;       R1: 0
;       R2: 0
;       R3: 0
;       R4: 0xFF12
;       R5: 0xFF35
;       R6: 0x0023
;       R7: 0xFF50
;       R8: 0xFF4f
;       R9: 0x0000
;      R10: 0xFDCC
;      R11: 0x02CD
;      R12: 0x02CC
;      R13: 
;      R14: 0x1356
;      R15: 0x7156

