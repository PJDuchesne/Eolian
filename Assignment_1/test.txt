; PRIORITY WRITE OUTPUT

; Labels for Devices 0-3 SR and Buffer
dev0reg  EQU $0000   ; Device 0s control register.
dev0data EQU $0001   ; Data buffer for device 0 is at address 1.
dev1reg  EQU $0002   ; Device 1s control register.
dev1data EQU $0003   ; Data buffer for device 1 is at address 3.
dev2reg  EQU $0004   ; Device 2s control register.
dev2data EQU $0005   ; Data buffer for device 2 is at address 5.
dev3reg  EQU $0006   ; Device 3s control register.
dev3data EQU $0007   ; Data buffer for device 3 is at address 7.

; NOT USED
COFF     EQU $10     ; Bit to turn the CPU off could use this to replace the forever waiting loop.

; DATA ARRAYS
org $4000
DeviceDataArray0 string "ABCDEFGH" ; 8 bytes, 4000 -> 4008
org $4020
DeviceDataArray1 string "abcdefgh" ; 8 bytes, 4020 -> 4028
org $4040
DeviceDataArray2 string "12345678" ; 8 bytes, 4040 -> 4048
org $4060
DeviceDataArray3 string "ZYWVUTSR" ; 8 bytes, 4060 -> 4068

; MAIN
ORG $1000
START 

; Enable interrupts on all devices
BIS #1,dev0reg;
BIS #1,dev1reg;
BIS #1,dev2reg;
BIS #1,dev3reg;

mov #$FFC0,SP            ; Set up stack pointer
BIS  #8,SR               ; set GIE to enabled SR: xxxx xxxx xxxx 1xxx

; Set up R10 through R13 with the locations of the data arrays
mov #DeviceDataArray0,R10
mov #DeviceDataArray1,R11
mov #DeviceDataArray2,R12
mov #DeviceDataArray3,R13

mov.b @R10+,dev0data    ; Send first piece of data for RA
mov.b @R11+,dev1data    ; Send first piece of data for RA
mov.b @R12+,dev2data    ; Send first piece of data for RA
mov.b @R13+,dev3data    ; Send first piece of data for RA

done jmp done           ; loop doing nothing forever (USE COFF EVENTUALLY)

; DEVICE INTERRUPTS HERE
org $3000
ISRdev0
mov.b dev0reg,R15       ; Acknowlege interrupt
cmp #$4008,R10          ; End of string
jeq ISRdev0_end
mov.b @R10+,dev0data    ; Set next char emitting
ISRdev0_end RETI

org $3100
ISRdev1
mov.b dev1reg,R15       ; Acknowlege interrupt
cmp #$4028,R11          ; End of string?
jeq ISRdev1_end
mov.b @R11+,dev1data    ; Set new data going
ISRdev1_end RETI

org $3200
ISRdev2
mov.b dev2reg,R15       ; Acknowlege interrupt
cmp #$4048,R12          ; End of string?
jeq ISRdev2_end
mov.b @R12+,dev2data    ; Set new data going
ISRdev2_end RETI

org $3300
ISRdev3
mov.b dev3reg,R15       ; Acknowlege interrupt
cmp #$4068,R13          ; End of string?
jeq ISRdev3_end
mov.b @R13+,dev3data    ; Set new data going
ISRdev3_end RETI

; insert ISR Vector address
org $FFC0       ; Vector address for device 0.
WORD ISRdev0    ; Address of my ISR
WORD ISRdev1    ; Address of my ISR
WORD ISRdev2    ; Address of my ISR
WORD ISRdev3    ; Address of my ISR

END START       ;For start address.

